// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/loxilb-io/loxilb/api/models"
)

// PostConfigHastateNoContentCode is the HTTP code returned for type PostConfigHastateNoContent
const PostConfigHastateNoContentCode int = 204

/*
PostConfigHastateNoContent OK

swagger:response postConfigHastateNoContent
*/
type PostConfigHastateNoContent struct {
}

// NewPostConfigHastateNoContent creates PostConfigHastateNoContent with default headers values
func NewPostConfigHastateNoContent() *PostConfigHastateNoContent {

	return &PostConfigHastateNoContent{}
}

// WriteResponse to the client
func (o *PostConfigHastateNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostConfigHastateBadRequestCode is the HTTP code returned for type PostConfigHastateBadRequest
const PostConfigHastateBadRequestCode int = 400

/*
PostConfigHastateBadRequest Malformed arguments for API call

swagger:response postConfigHastateBadRequest
*/
type PostConfigHastateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigHastateBadRequest creates PostConfigHastateBadRequest with default headers values
func NewPostConfigHastateBadRequest() *PostConfigHastateBadRequest {

	return &PostConfigHastateBadRequest{}
}

// WithPayload adds the payload to the post config hastate bad request response
func (o *PostConfigHastateBadRequest) WithPayload(payload *models.Error) *PostConfigHastateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config hastate bad request response
func (o *PostConfigHastateBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigHastateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigHastateUnauthorizedCode is the HTTP code returned for type PostConfigHastateUnauthorized
const PostConfigHastateUnauthorizedCode int = 401

/*
PostConfigHastateUnauthorized Invalid authentication credentials

swagger:response postConfigHastateUnauthorized
*/
type PostConfigHastateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigHastateUnauthorized creates PostConfigHastateUnauthorized with default headers values
func NewPostConfigHastateUnauthorized() *PostConfigHastateUnauthorized {

	return &PostConfigHastateUnauthorized{}
}

// WithPayload adds the payload to the post config hastate unauthorized response
func (o *PostConfigHastateUnauthorized) WithPayload(payload *models.Error) *PostConfigHastateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config hastate unauthorized response
func (o *PostConfigHastateUnauthorized) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigHastateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigHastateForbiddenCode is the HTTP code returned for type PostConfigHastateForbidden
const PostConfigHastateForbiddenCode int = 403

/*
PostConfigHastateForbidden Capacity insufficient

swagger:response postConfigHastateForbidden
*/
type PostConfigHastateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigHastateForbidden creates PostConfigHastateForbidden with default headers values
func NewPostConfigHastateForbidden() *PostConfigHastateForbidden {

	return &PostConfigHastateForbidden{}
}

// WithPayload adds the payload to the post config hastate forbidden response
func (o *PostConfigHastateForbidden) WithPayload(payload *models.Error) *PostConfigHastateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config hastate forbidden response
func (o *PostConfigHastateForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigHastateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigHastateNotFoundCode is the HTTP code returned for type PostConfigHastateNotFound
const PostConfigHastateNotFoundCode int = 404

/*
PostConfigHastateNotFound Resource not found

swagger:response postConfigHastateNotFound
*/
type PostConfigHastateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigHastateNotFound creates PostConfigHastateNotFound with default headers values
func NewPostConfigHastateNotFound() *PostConfigHastateNotFound {

	return &PostConfigHastateNotFound{}
}

// WithPayload adds the payload to the post config hastate not found response
func (o *PostConfigHastateNotFound) WithPayload(payload *models.Error) *PostConfigHastateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config hastate not found response
func (o *PostConfigHastateNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigHastateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigHastateConflictCode is the HTTP code returned for type PostConfigHastateConflict
const PostConfigHastateConflictCode int = 409

/*
PostConfigHastateConflict Resource Conflict.

swagger:response postConfigHastateConflict
*/
type PostConfigHastateConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigHastateConflict creates PostConfigHastateConflict with default headers values
func NewPostConfigHastateConflict() *PostConfigHastateConflict {

	return &PostConfigHastateConflict{}
}

// WithPayload adds the payload to the post config hastate conflict response
func (o *PostConfigHastateConflict) WithPayload(payload *models.Error) *PostConfigHastateConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config hastate conflict response
func (o *PostConfigHastateConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigHastateConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigHastateInternalServerErrorCode is the HTTP code returned for type PostConfigHastateInternalServerError
const PostConfigHastateInternalServerErrorCode int = 500

/*
PostConfigHastateInternalServerError Internal service error

swagger:response postConfigHastateInternalServerError
*/
type PostConfigHastateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigHastateInternalServerError creates PostConfigHastateInternalServerError with default headers values
func NewPostConfigHastateInternalServerError() *PostConfigHastateInternalServerError {

	return &PostConfigHastateInternalServerError{}
}

// WithPayload adds the payload to the post config hastate internal server error response
func (o *PostConfigHastateInternalServerError) WithPayload(payload *models.Error) *PostConfigHastateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config hastate internal server error response
func (o *PostConfigHastateInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigHastateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostConfigHastateServiceUnavailableCode is the HTTP code returned for type PostConfigHastateServiceUnavailable
const PostConfigHastateServiceUnavailableCode int = 503

/*
PostConfigHastateServiceUnavailable Maintanence mode

swagger:response postConfigHastateServiceUnavailable
*/
type PostConfigHastateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostConfigHastateServiceUnavailable creates PostConfigHastateServiceUnavailable with default headers values
func NewPostConfigHastateServiceUnavailable() *PostConfigHastateServiceUnavailable {

	return &PostConfigHastateServiceUnavailable{}
}

// WithPayload adds the payload to the post config hastate service unavailable response
func (o *PostConfigHastateServiceUnavailable) WithPayload(payload *models.Error) *PostConfigHastateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post config hastate service unavailable response
func (o *PostConfigHastateServiceUnavailable) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostConfigHastateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
