// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Loxilb REST API for Baremetal Scenarios",
    "title": "Loxilb Rest API",
    "version": "0.0.1"
  },
  "host": "192.168.20.253:8090",
  "basePath": "/netlox/v1",
  "paths": {
    "/config/loadbalancer": {
      "post": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "description": "Attributes for load balance service",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadbalanceEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer/all": {
      "get": {
        "description": "Get all of the load balancer services with conntrack infomation.",
        "summary": "Get all of the load balancer services",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "attr": {
                  "$ref": "#/definitions/LoadbalanceEntry"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer/externalipaddress/{ip_address}/port/{port}/protocol/{proto}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes for load balance service",
            "name": "ip_address",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Attributes for load balance service",
            "name": "port",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Attributes for load balance service",
            "name": "proto",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code",
            "message"
          ],
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "details": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "message": {
              "type": "string"
            },
            "sub-code": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "LoadbalanceEntry": {
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "values of End point servers",
          "type": "array",
          "items": {
            "properties": {
              "endpointIP": {
                "description": "IP address for externel access",
                "type": "string"
              },
              "targetPort": {
                "description": "port number for access service",
                "type": "integer"
              },
              "weight": {
                "description": "Weight for the load balancing",
                "type": "integer"
              }
            }
          }
        },
        "serviceArguments": {
          "type": "object",
          "properties": {
            "externalIP": {
              "description": "IP address for externel access",
              "type": "string"
            },
            "port": {
              "description": "port number for the access",
              "type": "integer"
            },
            "protocol": {
              "description": "value for access protocol",
              "type": "string"
            }
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Loxilb REST API for Baremetal Scenarios",
    "title": "Loxilb Rest API",
    "version": "0.0.1"
  },
  "host": "192.168.20.253:8090",
  "basePath": "/netlox/v1",
  "paths": {
    "/config/loadbalancer": {
      "post": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "description": "Attributes for load balance service",
            "name": "attr",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoadbalanceEntry"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer/all": {
      "get": {
        "description": "Get all of the load balancer services with conntrack infomation.",
        "summary": "Get all of the load balancer services",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "attr": {
                  "$ref": "#/definitions/LoadbalanceEntry"
                }
              }
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/config/loadbalancer/externalipaddress/{ip_address}/port/{port}/protocol/{proto}": {
      "delete": {
        "description": "Create a new load balancer service with .",
        "summary": "Create a new Load balancer service",
        "parameters": [
          {
            "type": "string",
            "description": "Attributes for load balance service",
            "name": "ip_address",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Attributes for load balance service",
            "name": "port",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Attributes for load balance service",
            "name": "proto",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Malformed arguments for API call",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Invalid authentication credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Capacity insufficient",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Resource Conflict. VLAN already exists OR dependency VRF/VNET not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "503": {
            "description": "Maintanence mode",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "object",
          "required": [
            "code",
            "message"
          ],
          "properties": {
            "code": {
              "type": "integer",
              "format": "int32"
            },
            "details": {
              "type": "string"
            },
            "fields": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "message": {
              "type": "string"
            },
            "sub-code": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "ErrorError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "message": {
          "type": "string"
        },
        "sub-code": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "LoadbalanceEntry": {
      "type": "object",
      "properties": {
        "endpoints": {
          "description": "values of End point servers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LoadbalanceEntryEndpointsItems0"
          }
        },
        "serviceArguments": {
          "type": "object",
          "properties": {
            "externalIP": {
              "description": "IP address for externel access",
              "type": "string"
            },
            "port": {
              "description": "port number for the access",
              "type": "integer"
            },
            "protocol": {
              "description": "value for access protocol",
              "type": "string"
            }
          }
        }
      }
    },
    "LoadbalanceEntryEndpointsItems0": {
      "properties": {
        "endpointIP": {
          "description": "IP address for externel access",
          "type": "string"
        },
        "targetPort": {
          "description": "port number for access service",
          "type": "integer"
        },
        "weight": {
          "description": "Weight for the load balancing",
          "type": "integer"
        }
      }
    },
    "LoadbalanceEntryServiceArguments": {
      "type": "object",
      "properties": {
        "externalIP": {
          "description": "IP address for externel access",
          "type": "string"
        },
        "port": {
          "description": "port number for the access",
          "type": "integer"
        },
        "protocol": {
          "description": "value for access protocol",
          "type": "string"
        }
      }
    }
  }
}`))
}
